import yaml
from TwitterAPI import TwitterAPI
import Tweet
import DBConnection

# Load username and password
conf = yaml.safe_load(open('config/settings.yaml'))

"""
Implements functionality declared in the abstract API class
"""
class TwitterMysql(TwitterAPI):

    def __init__(self):
        self.connection = DBConnection.DBConnection(host="localhost", user=conf['login']['user'], password=conf['login']['password'],
                                                    database="twitter_rdb")

    def postTweet(self, user_id, tweet_text):
        """
        :param user_id: ID of user
        :param tweet_text: Tweet textual contents
        :return: Executes insert_tweet procedure
        """
        try:
            self.connection.get_connection()
            cur = self.connection.get_cursor()

            cur.callproc("insert_tweet", [user_id, tweet_text])
            self.connection.commit()
        except Exception as e:
            print(e)

    def getTimeline(self, user_id):
        """
        :param user_id: ID of user
        :return: List of Tweet objects of user consisting of all tweets generated by other users current user follows
        by executing query
        """
        try:
            self.connection.get_connection()
            cur = self.connection.get_cursor()

            # Call stored procedure to retrieve timeline for user
            cur.callproc("get_timeline", [user_id])
            
            tweets = []

            # Iterate over each result set produced by the stored procedure
            for result_set in cur.stored_results():
                # Fetch all rows from the current result set
                rows = result_set.fetchall()

                # Iterate over each row in the result set
                for row in rows:
                    # Create a Tweet object for each row
                    tweet = Tweet.Tweet(tweet_id=row[1], user_id=row[0], tweet_ts=row[2], tweet_text=row[3])
                    tweets.append(tweet)

                    # Print tweet details
                    print(tweet.tweet_id, tweet.user_id, tweet.tweet_ts, tweet.tweet_text)

            return tweets

        except Exception as e:
            print(e)
